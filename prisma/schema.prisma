// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  files      File[]
  comments   Comment[]
  sharedDocs SharedFile[] @relation("SharedFileWith")
}

model File {
  id            Int          @id @default(autoincrement())
  userId        Int
  fileName      String
  filePath      String?      @db.LongText
  extractedText String?      @db.LongText
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  user          User         @relation(fields: [userId], references: [id])
  comments      Comment[]
  sharedDocs    SharedFile[] @relation("Sharedfiles")
}

model Comment {
  id        Int      @id @default(autoincrement())
  fileId    Int
  userId    Int
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  file      File     @relation(fields: [fileId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model SharedFile {
  id               Int      @id @default(autoincrement())
  fileId           Int
  sharedWithUserId Int
  createdAt        DateTime @default(now())
  sharedWith       User     @relation("SharedFileWith", fields: [sharedWithUserId], references: [id])
  file             File     @relation("Sharedfiles", fields: [fileId], references: [id])
}
